from flask import Flask
from flask_caching import Cache
from flask import Blueprint,request,jsonify,Response
#import json
from uuid import uuid4
import traceback

app = Flask(__name__)

# Configure caching
#cache = Cache(app, config={'CACHE_TYPE': 'memcached'}) # simple

#cache = Cache(app, config={"CACHE_TYPE": "redis", "CACHE_REDIS_URL": "redis://localhost:6379/0"})
cache = Cache(app, config={"CACHE_TYPE": "redis", "CACHE_REDIS_HOST": "localhost","CACHE_REDIS_PORT":6379})
@app.route('/')
def index():
    return 'Hello, World!'

@app.route("/cache/new",methods=["POST"])
def update():
    try:
        print(" new : cache request ",request.json)
        id = str(uuid4())
        cache.set(id,request.json)
        return jsonify({"status":"SUCCESS","_id":id}),200
    except Exception as e:
        print(Exception, e)
        print(traceback.format_exc())
        return jsonify({"status":"ERROR"}),500


@app.route("/cache/<id>")
def get(id):
    try:
        print("request for cache wih id  --> ",id)
        resp = cache.get(id)
        print("resp --> ",resp)
        if resp is None:
            return jsonify({"status":"KEY_NOT_IN_CACHE"}),404
        return resp,200
    except Exception as e:
        print(Exception, e)
        print(traceback.format_exc())
        return jsonify({"status":"ERROR"+e}),500

if __name__ == '__main__':
    app.run(debug=True)


@app.route('/cached')
@cache.cached(timeout=60)  # Cache for 60 seconds
def cached_data():
    # Simulate some expensive operation
    print("cached called")
    import time
    time.sleep(2)
    return 'This data is cached for 60 seconds'


@app.route('/set_cookie')
def set_cookie():
    value = request.args.get('value', 'default_value')
    response = make_response("Cookie set!")
    response.set_cookie('my_cookie', value)

    # Cache the cookie value
    cache.set('my_cookie', value)

    return response

@app.route('/get_cookie')
def get_cookie():
    # Try to get the cookie value from the cache
    cached_value = cache.get('my_cookie')
    if cached_value:
        return f"Cached cookie value: {cached_value}"
    else:
        cookie_value = request.cookies.get('my_cookie')
        if cookie_value:
            return f"Cookie value: {cookie_value}"
        else:
            return "Cookie not found!"